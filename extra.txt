git bash> https://git-scm.com/downloads

>> only one time
git clone https://github.com/DipikaRane/fswdsummerintern.git
go inside fswdsummerintern
git pull


>>every time do this
git add .
git commit -m "changes"
git push -u origin main/master

Bootstrap 3 cdn
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>

Bootstrap 4 cdn -
<!-- Latest compiled and minified CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css">

<!-- jQuery library -->
<script src="https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.slim.min.js"></script>

<!-- Popper JS -->
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>

<!-- Latest compiled JavaScript -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/js/bootstrap.bundle.min.js"></script>
>>>glyphicon are removed

### Grid Basics for Bootstrap ###
>> Bootstrap 3
>col-xs<768px
sm>768px
md>992px
lg>1200px

>>>>Bootsrap 4
col-xs -<576px
col-sm >576px
col-md>768px
col-lg>992px
col-xl>1200px;

>>>>>Bootstrap
col-xs -<576px
col-sm >576px
col-md>768px
col-lg>992px
col-xl>1200px
col-xxl>1400px

extensions for VS-code to be installed
1. tabnine
2. Autoclose tag
3.gilense

>>>> About Node & Json-server>>>>
Install node.js
https://nodejs.org/en/download/
Install POSTMAN -https://www.postman.com/downloads/
mongodb - https://www.mongodb.com/try/download/community

###windows## --one time 
>open command prompt as administrator
>npm i -g json-server
>close cmd

##Linux/Mac OS##### -- one time
>open cmd/terminal
>sudo npm i -g json-server

>>>open terminal in VSCode
>>> json-server --watch employee.json --port 8500
>>hit enter

### Method ###
1. GET
2. POST
3. DELETE
4. UPDATE

//generating video url
https://www.kapwing.com/resources/how-to-create-a-url-link-for-a-video/

Assignment of JS
1. Calculator must consist backspace button
2. Coupons
//use for coupon
<script>
    window.onload=showdiv();
</script>

API calling
API - Apllication Programming Interface

///Backend///
NodeJS 
require npm -node pacakge manager
1. nodejs must me installed in your system
2. open terminal/cmd
3. navigate to folder
4. npm init

///pacakge.json///
1.entry point to the node.
2.contains metadata like name, description, version, keywords etc.
3. scripts (start, test, build)
4.packages/dependencies

### steps  to install packages###
1.open terminal/cmd
2.navigate to folder
3. npm i package_name

##local dependencies##
1. local to the folder
2. used in the same folder
3. do not need admin access to work/install

##global dependencies##
1.installed in your system
2.used for any application.
3.only those packages that helps to start, build, test applications.
4. need admin access to work/install

step to install global package
##windows####
1.open terminal/cmd
2.navigate to folder
3.npm i -g package_name

##Linux/Mac####
1.open terminal/cmd
2.navigate to folder
3.sudo npm i -g package_name

##nodemon###
npm i -g nodemon

>>>making url/api live
1. create one folder having app.js, package.json, package-lock.json
2. make sure mongoURL must be Live
3 create one repository, initalize it.. push your code to the repository.
4. go to heroku.com
https://id.heroku.com/login


>>>>>React framework>>>>>
1. node must be installed in system
2. to install react >>>
## 1. npm create-react-app
## 2. npx create-react-app app_name

###to start react-app
npm start or yarn start

default port of react
http://localhost:3000/

three things 
1. react - this is the main package
2. react-dom -: this package  helps to build JS with html
3. react-scripts  -: this helps to run the application

>>>React Component>>>
1. function component -- dumb component used only for display purposes
2. class component -- logical component, can call the API.
3. hooks component -- used in both class and component.

##state & props##

state -- state acts local component
        every component have its own state
        scope of state is single component
        we can update the value of state i.e mutable.

props -- helps to transfer the data between components
        we can transfer the data between nested components
        we cannot change the value of props (directly) i.e immutable

### constructor###
-- its a keywords
-- first thing that get called inside class

### Routing###
needs react-router to be installed 
install latest version
npm i react-router-dom@5.3.0

###default props###
History -- redirection
Location -- for queryparams
Match -- for params

###component methods###
componentDidMount() -- mounts the data from API on page load
componentDidUpdate() -- update the data when state update
componentWillUnmount() -- unmounts the data


###Storage###
three kinds of storage
1. localStorages -- persistent storage
---saves the data with respect to browser
--- need to be removed manually

2.sessionStorages -- non-persistent storage
-- saves the data/info with respect Tab
-- removes  automatically when the browser closed

3.cookies -- saves the info with respect to website
         ---- it has some expiry time, after that time info/cookies will be removed automatically


methods to use localStorage>>>>>>>>
1. localStorage.setItem('key','value')
2. localStorage.getItem('key')
3. localStorage.removeItem('key')

methods to use sessionStorage>>>>>>>>
1. sessionStorage.setItem('key','value')
2. sessionStorage.getItem('key')
3. sessionStorage.removeItem('key')

localStorage.setItem('Token','Deepika')
undefined
localStorage.getItem('Token')
'Deepika'
localStorage.removeItem('Token')
undefined
sessionStorage.setItem('MyToken','Techvanto')
undefined
sessionStorage.getItem('MyToken')
'Techvanto'
sessionStorage.removeItem('MyToken')

methods to use Cookies>>>>>>>>
document.cookies="user=admin; expiry=Mon 12July 2022 14:34:00 UTC"